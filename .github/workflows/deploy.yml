name: üìà Deploy with SSL

on:
  push:
    tags:
      - 'v-*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4
      
    - name: üîß Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: üîê Load Kubeconfig
      run: |
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > /tmp/kubeconfig.yaml
        export KUBECONFIG=/tmp/kubeconfig.yaml
        kubectl get nodes

    - name: üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ä–µ—Å—É—Ä—Å—ã
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        echo "=== –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ—Å—É—Ä—Å—ã ==="
        kubectl delete namespace ingress-nginx --ignore-not-found=true
        kubectl delete namespace cert-manager --ignore-not-found=true
        sleep 10

    - name: üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Official Ingress-Nginx
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π ingress-nginx ==="
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
        
        echo "=== 2. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ ingress controller ==="
        sleep 30
        
        echo "=== 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Ä—Ç—ã –¥–ª—è Kind ==="
        kubectl patch service -n ingress-nginx ingress-nginx-controller --type='json' -p='[
          {"op": "replace", "path": "/spec/type", "value": "NodePort"},
          {"op": "replace", "path": "/spec/ports/0/nodePort", "value": 30080},
          {"op": "replace", "path": "/spec/ports/1/nodePort", "value": 30443}
        ]'
        
        echo "=== 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º ingress-nginx ==="
        kubectl get pods -n ingress-nginx
        kubectl get service -n ingress-nginx

    - name: üì¶ Install Cert-Manager (Official)
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        echo "=== Installing Cert-Manager ==="
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é cert-manager
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.4/cert-manager.yaml
        
        echo "‚è≥ Waiting for cert-manager to be ready..."
        sleep 60
        kubectl wait --namespace cert-manager \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/instance=cert-manager \
          --timeout=300s
        
        echo "=== –ü—Ä–æ–≤–µ—Ä—è–µ–º cert-manager ==="
        kubectl get pods -n cert-manager

    - name: üìù –ù–∞—Å—Ç—Ä–æ–∏—Ç—å ClusterIssuer
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== –°–æ–∑–¥–∞–µ–º ClusterIssuer ==="
        kubectl apply -f k8s/infrastructure/cluster-issuer.yaml
        
        echo "=== –ü—Ä–æ–≤–µ—Ä—è–µ–º ClusterIssuer ==="
        kubectl get clusterissuer

    - name: üõ†Ô∏è Deploy Application with SSL
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== Creating ConfigMaps ==="
        kubectl create configmap nginx-html --from-file=html/index.html -o yaml --dry-run=client | kubectl apply -f -
        kubectl create configmap nginx-config --from-file=nginx-config/nginx.conf -o yaml --dry-run=client | kubectl apply -f -
        
        echo "=== Deploying Application ==="
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        
        echo "‚è≥ Waiting for application to start..."
        sleep 20
        
        echo "=== Deploying Certificate ==="
        kubectl apply -f k8s/infrastructure/certificate.yaml
        
        echo "=== Deploying Ingress with TLS ==="
        kubectl apply -f k8s/infrastructure/ingress-tls.yaml
        
        echo "‚è≥ Waiting for SSL certificate issuance (this may take 2-3 minutes)..."
        sleep 180
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        echo "=== Checking Certificate Status ==="
        kubectl get certificate -A
        kubectl describe certificate clerikc-ru-tls
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º challenges
        echo "=== Checking ACME Challenges ==="
        kubectl get challenges -A
        
        echo "‚úÖ Application deployed with SSL!"

    - name: üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ SSL
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ ==="
        kubectl get certificate -A
        kubectl describe certificate clerikc-ru-tls
        
        echo "=== 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º Order –∏ Challenge ==="
        kubectl get orders -A
        kubectl get challenges -A
        
        echo "=== 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º ==="
        kubectl get secret clerikc-ru-tls -o jsonpath='{.data.tls\.crt}' | base64 -d | openssl x509 -text -noout | head 20
        
        echo "=== 4. –õ–æ–≥–∏ cert-manager ==="
        kubectl logs -n cert-manager -l app.kubernetes.io/name=cert-manager --tail=30
        
        echo "=== 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º ingress ==="
        kubectl describe ingress nginx-cicd-demo

    - name: üß™ Test SSL
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        echo "Testing SSL deployment..."
        
        echo "=== Testing HTTPS ==="
        if curl -fk https://clerikc.ru; then
          echo "‚úÖ HTTPS works!"
        else
          echo "‚ùå HTTPS failed, checking resources..."
          kubectl get ingress -A
          kubectl get certificate -A
          kubectl get challenges -A
          kubectl describe certificate clerikc-ru-tls
          kubectl logs -n cert-manager -l app.kubernetes.io/name=cert-manager --tail=20
          exit 1
        fi