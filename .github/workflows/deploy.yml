name: üöÄ Deploy Application with SSL

on:
  push:
    tags:
      - 'v-*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üîß Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: üîê Configure Kubernetes access
      run: |
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > /tmp/kubeconfig.yaml
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        # üìù Extract CA certificate and add to trusted certificates
        mkdir -p /tmp/certs
        cat /tmp/kubeconfig.yaml | grep certificate-authority-data | awk '{print $2}' | base64 -d > /tmp/certs/kind-ca.crt
        
        # üîí Add CA certificate to system trusted certificates
        sudo cp /tmp/certs/kind-ca.crt /usr/local/share/ca-certificates/kind-ca.crt
        sudo update-ca-certificates
        
        # üåê Set environment variables for additional CA trust
        echo "NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt" >> $GITHUB_ENV
        echo "SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt" >> $GITHUB_ENV

    - name: üåê Deploy Ingress Controller
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        export NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt
        
        # ‚úÖ Apply with certificate validation fix
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml --validate=false
        
        kubectl patch service -n ingress-nginx ingress-nginx-controller --type='json' -p='[
          {"op": "replace", "path": "/spec/type", "value": "NodePort"},
          {"op": "replace", "path": "/spec/ports/0/nodePort", "value": 30080},
          {"op": "replace", "path": "/spec/ports/1/nodePort", "value": 30443}
        ]'
        kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=180s

    - name: üîí Deploy Cert-Manager
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        export NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt
        
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.4/cert-manager.yaml --validate=false
        kubectl wait --namespace cert-manager --for=condition=ready pod --selector=app.kubernetes.io/instance=cert-manager --timeout=300s

    - name: üìù Configure SSL Issuer
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        export NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt
        
        # üöÄ PRODUCTION: –ò—Å–ø–æ–ª—å–∑—É–µ–º prod issuer –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        kubectl apply -f k8s/infrastructure/cluster-issuer-prod.yaml
        
        # üß™ TESTING: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (staging issuer)
        # kubectl apply -f k8s/infrastructure/cluster-issuer-staging.yaml

    - name: üõ†Ô∏è Deploy Application
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        export NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt
        
        # –°–æ–∑–¥–∞–µ–º ConfigMaps
        kubectl create configmap nginx-html --from-file=html/index.html -o yaml --dry-run=client | kubectl apply -f -
        kubectl create configmap nginx-config --from-file=nginx-config/nginx.conf -o yaml --dry-run=client | kubectl apply -f -
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –í–°–ï –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        kubectl apply -f k8s/

    - name: üåê Configure Ingress with SSL
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        export NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt
        
        # üöÄ PRODUCTION: –ò—Å–ø–æ–ª—å–∑—É–µ–º prod ingress –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        kubectl apply -f k8s/infrastructure/ingress-prod.yaml
        
        # üß™ TESTING: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (staging ingress)
        # kubectl apply -f k8s/infrastructure/ingress-staging.yaml

    - name: üîÑ Restart for Config Changes
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        export NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt
        
        echo "üîÑ Restarting deployment to apply config changes..."
        kubectl rollout restart deployment/nginx-cicd-demo
        kubectl rollout status deployment/nginx-cicd-demo --timeout=180s

    - name: ‚è≥ Wait for SSL Certificate
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        export NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt
        
        echo "‚è≥ Waiting for SSL certificate issuance..."
        sleep 90
        kubectl get certificate
        echo "‚úÖ SSL certificate ready"

    - name: ‚úÖ Verify Deployment
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        export NODE_EXTRA_CA_CERTS=/tmp/certs/kind-ca.crt
        
        echo "üîç Checking deployment status..."
        kubectl get pods
        kubectl get ingress
        kubectl get certificate
        
        echo "üéâ Application deployed successfully!"
        echo "üåê Access your site: https://clerikc.ru"
        echo "üí° Note: For testing, use staging issuer/ingress files"