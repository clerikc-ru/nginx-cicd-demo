name: üìà Deploy with SSL

on:
  push:
    tags:
      - 'v-*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4
      
    - name: üîß Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: üîê Load Kubeconfig
      run: |
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > /tmp/kubeconfig.yaml
        export KUBECONFIG=/tmp/kubeconfig.yaml
        kubectl get nodes

    - name: üì¶ Install Cert-Manager CRDs
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        echo "=== Installing Cert-Manager CRDs ==="
        kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.14.4/cert-manager.crds.yaml
        echo "‚è≥ Waiting for CRDs to be registered..."
        sleep 10

    - name: üèóÔ∏è Deploy Infrastructure (SSL)
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== Deploying SSL Infrastructure ==="
        
        # 1. –°–Ω–∞—á–∞–ª–∞ cert-manager –∏ ingress-nginx
        kubectl apply -f k8s/infrastructure/cert-manager.yaml
        kubectl apply -f k8s/infrastructure/ingress-controller.yaml
        
        echo "‚è≥ Waiting for cert-manager to be ready..."
        sleep 30
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ cert-manager –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
        kubectl get pods -n cert-manager
        
        # 3. –¢–æ–ª—å–∫–æ –ø–æ—Ç–æ–º ClusterIssuer
        kubectl apply -f k8s/infrastructure/cluster-issuer.yaml
        echo "‚úÖ SSL infrastructure deployed!"

    - name: üõ†Ô∏è Deploy Application with SSL
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== Creating ConfigMaps ==="
        kubectl create configmap nginx-html --from-file=html/index.html -o yaml --dry-run=client | kubectl apply -f -
        kubectl create configmap nginx-config --from-file=nginx-config/nginx.conf -o yaml --dry-run=client | kubectl apply -f -
        
        echo "=== Deploying Application ==="
        # –°–Ω–∞—á–∞–ª–∞ –¥–µ–ø–ª–æ–π–º–µ–Ω—Ç –∏ —Å–µ—Ä–≤–∏—Å
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        
        echo "‚è≥ Waiting for application to start..."
        sleep 20
        
        echo "=== Deploying Certificate ==="
        # –°–æ–∑–¥–∞–µ–º Certificate —Ä–µ—Å—É—Ä—Å
        kubectl apply -f k8s/infrastructure/certificate.yaml
        
        echo "=== Deploying Ingress with TLS ==="
        # –¢–æ–ª—å–∫–æ –ø–æ—Ç–æ–º Ingress —Å TLS
        kubectl apply -f k8s/infrastructure/ingress-tls.yaml
        
        echo "‚è≥ Waiting for SSL certificate issuance (this may take 1-2 minutes)..."
        sleep 90
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        echo "=== Checking Certificate Status ==="
        kubectl get certificate -A
        kubectl describe certificate clerikc-ru-tls
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º challenges
        echo "=== Checking ACME Challenges ==="
        kubectl get challenges -A
        
        echo "‚úÖ Application deployed with SSL!"

    - name: üß™ Test SSL
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        echo "Testing SSL deployment..."
        
        echo "=== Testing HTTPS ==="
        if curl -fk https://clerikc.ru; then
          echo "‚úÖ HTTPS works!"
        else
          echo "‚ùå HTTPS failed, checking resources..."
          kubectl get ingress -A
          kubectl get certificate -A
          kubectl get challenges -A
          kubectl describe certificate clerikc-ru-tls
          exit 1
        fi