name: üîç Test Ingress Access

on:
  workflow_dispatch:
  push:
    tags:
      - 'fixed-*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4
      
    - name: üîß Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: üîê Load Kubeconfig
      run: |
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > /tmp/kubeconfig.yaml
        export KUBECONFIG=/tmp/kubeconfig.yaml
        kubectl get nodes

    - name: üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ä–µ—Å—É—Ä—Å—ã
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        echo "=== –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ—Å—É—Ä—Å—ã ==="
        kubectl delete namespace ingress-nginx --ignore-not-found=true
        kubectl delete namespace cert-manager --ignore-not-found=true
        sleep 10

    - name: üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Official Ingress Controller
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π ingress-nginx ==="
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
        
        echo "=== 2. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ ingress controller ==="
        sleep 30
        
        echo "=== 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å ==="
        kubectl get pods -n ingress-nginx
        kubectl get service -n ingress-nginx
        
        echo "=== 4. –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ ==="
        kubectl wait --namespace ingress-nginx \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/component=controller \
          --timeout=120s

    - name: üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Ä—Ç—ã –¥–ª—è Kind
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å –Ω–∞ NodePort —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏ ==="
        kubectl patch service -n ingress-nginx ingress-nginx-controller --type='json' -p='[
          {"op": "replace", "path": "/spec/type", "value": "NodePort"},
          {"op": "replace", "path": "/spec/ports/0/nodePort", "value": 30080},
          {"op": "replace", "path": "/spec/ports/1/nodePort", "value": 30443}
        ]'
        
        echo "=== –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å ==="
        kubectl get service -n ingress-nginx

    - name: üõ†Ô∏è Deploy Test Application
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== Deploying Test Application ==="
        kubectl create configmap nginx-html --from-file=html/index.html -o yaml --dry-run=client | kubectl apply -f -
        kubectl create configmap nginx-config --from-file=nginx-config/nginx.conf -o yaml --dry-run=client | kubectl apply -f -
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        
        echo "‚è≥ Waiting for application..."
        sleep 20

    - name: üåê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Ingress
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== –ü—Ä–∏–º–µ–Ω—è–µ–º Ingress –∏–∑ —Ñ–∞–π–ª–∞ ==="
        kubectl apply -f k8s/infrastructure/ingress.yaml
        
        echo "=== –ü—Ä–æ–≤–µ—Ä—è–µ–º Ingress ==="
        kubectl get ingress

    - name: üîç –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ ingress
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        
        echo "=== 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã ==="
        kubectl get pods -A
        kubectl get services -A
        kubectl get ingress -A
        
        echo "=== 2. –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ingress-nginx ==="
        kubectl describe pod -n ingress-nginx -l app.kubernetes.io/component=controller
        kubectl logs -n ingress-nginx -l app.kubernetes.io/component=controller --tail=20
        
        echo "=== 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ==="
        kubectl get pods -l app=nginx-cicd-demo
        kubectl logs -l app=nginx-cicd-demo --tail=5
        
        echo "=== 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ==="
        kubectl get service nginx-cicd-demo
        
        echo "=== 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –í–ù–£–¢–†–ò –∫–ª–∞—Å—Ç–µ—Ä–∞ ==="
        kubectl run test-curl --image=curlimages/curl --rm -i --restart=Never --command -- \
          sh -c 'echo "=== –¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–∞ ===" && \
                 curl -f http://nginx-cicd-demo.default.svc.cluster.local && echo "‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç" && \
                 echo "=== –¢–µ—Å—Ç ingress ===" && \
                 curl -f -H "Host: clerikc.ru" http://ingress-nginx-controller.ingress-nginx.svc.cluster.local && echo "‚úÖ Ingress —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞"'

    - name: üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        SERVER_IP="185.8.22.53"
        
        echo "=== –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–Ω–∞—Ä—É–∂–∏ ==="
        echo "=== –ü–æ—Ä—Ç 80 (–ø—Ä–æ–±—Ä–æ—à–µ–Ω –Ω–∞ 30080) ==="
        curl -v --connect-timeout 10 -H "Host: clerikc.ru" http://$SERVER_IP:80/ && echo "‚úÖ Ingress —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç 80!" || echo "‚ùå –ü–æ—Ä—Ç 80 –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        
        echo "=== –ü—Ä—è–º–æ–π NodePort 30080 ==="
        curl -v --connect-timeout 10 -H "Host: clerikc.ru" http://$SERVER_IP:30080/ && echo "‚úÖ Ingress —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ NodePort 30080!" || echo "‚ùå NodePort 30080 –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"

    - name: üîç Debug if Failed
      if: failure()
      run: |
        export KUBECONFIG=/tmp/kubeconfig.yaml
        echo "=== –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ==="
        kubectl describe service -n ingress-nginx
        kubectl logs -n ingress-nginx -l app.kubernetes.io/component=controller --tail=30
        kubectl get ingress -A
        kubectl describe ingress nginx-cicd-demo